use strict;
use warnings;

use Test::More tests => 1;
use FindBin;
use Path::Class qw/dir/;
use Data::Dumper;
use Kanku::Config;

Kanku::Config->initialize;

use Kanku::Job;

require_ok('Kanku::Handler::K8NodePortForward');

### Initialization Section
use Log::Log4perl qw(:easy);
Log::Log4perl->easy_init($TRACE);  # Set priority of root logger to ERROR

### Application Section
my $logger = get_logger();


my $job = Kanku::Job->new();

#$job->context()->{cache_dir} = $FindBin::Bin."/tmp/cache/";
$job->context()->{ipaddress} = "192.168.199.18";

my $handler = Kanku::Handler::K8NodePortForward->new(
  domain_name => 'kubernetes',
  host_interface => 'eth0',
  job         => $job,
  logger      => $logger,
  nodeports   => [
                   {
                     namespace   => "rook-ceph",
                     service     => "rook-ceph-mgr-dashboard-external-https",
                     transport   => "tcp",
                     application => "https",
                   }
                 ],
  cfg => {},
  # auth_type   => 'password',
  # password    => 'kankudai',
  # auth_type   => 'publickey',
  # publickey_path  => '/etc/kanku/ssh/id_rsa.pub',
  # privatekey_path => '/etc/kanku/ssh/id_rsa',
  # auth_type   => 'agent',
);


$handler->execute();



exit 0;
