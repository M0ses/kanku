#!/bin/bash

URL=$1
URL=${URL//kanku:\/\//}

function query_exit {
  EXIT_CODE=$1
  [ -n "$2" ] || echo $2
  echo "Keep shell alive? (y|Y|n|N)"
  read sel
  case $sel in
    y|Y)
      bash
    ;;
  esac

  exit $EXIT_CODE
}

if [ -z "$URL" ];then
  echo "No url given!"
  read
  exit
fi

TEMP_DIR=`mktemp -d`
KANKU_FILE="$TEMP_DIR/KankuFile"
USE_GPG=1
curl -L -o $KANKU_FILE "$URL" || query_exit 1 "Could not download $URL"

OUT=`curl -vo "$KANKU_FILE.asc" "$URL.asc" 2>&1 | grep "HTTP/1.1 404 Not Found"`

if [ -n "$OUT" ];then
  echo "Could not download detached signature ($URL.asc)"
  echo "It's not recommended to proceed"
  echo "Proceed anyway? (y|n)"
  read sel
  case $sel in
    y|Y)
      echo "YOU HAVE BEEN WARNED :-)"
      USE_GPG=0
    ;;
    *)
      exit 1
    ;;
  esac
fi

if [ "$USE_GPG" -eq "1" ];then
  gpg --verify $KANKU_FILE.asc $KANKU_FILE
  if [ $? -gt 0 ];then
    echo "Could not verify signature"
    echo "It's not recommended to proceed"
    echo "Proceed anyway? (y|n)"
    read sel
    case $sel in
      y|Y)
	echo "YOU HAVE BEEN WARNED :-)"
      ;;
      *)
	exit 1
      ;;
    esac
  fi
fi

cd $TEMP_DIR

DOMAIN_NAME=`grep "^domain_name:" ./KankuFile`
EXISTS=`virsh list --name --all|grep ${DOMAIN_NAME//domain_name:/}`

if [ -n "$EXISTS" ];then
  echo "$DOMAIN_NAME already exits!"
  echo
  echo "1) reconfigure KankuFile"
  echo "2) remove domain"
  echo "*) exit"
  read sel
  case $sel in
    1)
      echo "Enter new name: "
      read name
      perl -p -i -e "s/$DOMAIN_NAME/domain_name: $name/" KankuFile
    ;;
    2)
      kanku destroy
    ;;
    *)
      exit
    ;;
  esac
fi

kanku up
query_exit 0
