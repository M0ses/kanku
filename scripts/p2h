#!/usr/bin/perl
#
# This file is part of Pod-Markdown
#
# This software is copyright (c) 2011 by Randy Stauner.
#
# This is free software; you can redistribute it and/or modify it under
# the same terms as the Perl 5 programming language system itself.
#
use 5.008;
use strict;
use warnings;
# PODNAME: pod2markdown
# ABSTRACT: Convert POD text to Markdown

my $debuglevel = 9;
use Pod::Simple::Debug (\$debuglevel, 0);
use Pod::Simple::HTML;
use FindBin;
use File::Find;
use File::Path qw(make_path remove_tree);
use File::Basename;
use Data::Dumper;
use URI::Escape;

my %opts = (
  output_encoding => 'UTF-8',
  perldoc_url_prefix => './',
);
my $path_spec = $ARGV[0] || 'master';
my $outdir = "$FindBin::Bin/../page/pod";
my $indir  = "$FindBin::Bin/../lib/";

chdir "$FindBin::Bin/..";
my @args = ('git', 'restore', '--source', $path_spec, '--', 'lib');

system(@args) == 0 || die "system @args failed: $?";

my %files;
my %podhtml_LOT;

find({wanted => sub {

  if ( $File::Find::name =~ m#$indir([^.].*)[.](pm|pod)# ) {
    my $p = $1;
    my $f = "$1.$2";
    $p =~ s#/#::#g;
    $files{$p} = $f;
    my $h = uri_escape($p);
    $podhtml_LOT{$p} = "./$h.html";
}}}, $indir);

remove_tree($outdir);

while (my ($package, $file) = each %files) {
  my $of = "$outdir/$package.html";
  my $od = dirname($of);
  -d $od || make_path($od);

  convert("$indir/$file", $of);
}

if ($ARGV[1]) {
  print "SKIP COMMIT BECAUSE DEBUG IS SET IN ENV\n";
} else {
  @args = ('git', 'add', '--', $outdir);
  system(@args) == 0 || die "system @args failed: $?";

  @args = ('git', 'commit', '-m', "updated pod to $path_spec");
  system(@args) == 0 || die "system @args failed: $?";
}

remove_tree($indir);

exit 0;

sub convert {
    my ($in_file, $out_file) = @_;
    my $p = Pod::Simple::HTML->new;
    $p->{podhtml_LOT} = \%podhtml_LOT;
    $p->html_css('../../theme/css/statocles-default.css'),
    my $html;
    $p->output_string(\$html);
    my $header = <<EOF;
        </title>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="stylesheet" href="../../theme/css/normalize.css" />
        <link rel="stylesheet" href="../../theme/css/skeleton.css" />
        <link rel="stylesheet" href="../../theme/css/statocles-default.css" />
        <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">
        <link rel="shortcut icon" type="image/x-icon" href="../favicon.ico">
        <meta name="generator" content="Statocles 0.098" />

    </head>
    <body>
        <header>
            <nav class="navbar">
                <div class="container">
                    <a class="brand" href="/">Kanku</a>
                    <ul>
                        <li>
                            <a href="../getting_started">Getting Started</a>
                        </li>
                        <li>
                            <a href="../overview">Overview</a>
                        </li>
                        <li>
                            <a href="../faq">FAQ</a>
                        </li>
                        <li>
                            <a href="../download">Download</a>
                        </li>
                        <li>
                            <a href="../../blog">News</a>
                        </li>
                    </ul>

                </div>
            </nav>

        </header>
        <div class="main container">
            <div class="row">
                <div class="nine columns">
                    <main>

EOF
    $p->html_header_after_title($header);
    my $footer=<<EOF;
                    </main>
                </div>

                <div class="three columns sidebar">



                </div>
            </div>
        </div>
        <footer>

        </footer>
    </body>
</html>
EOF
    $p->html_footer($footer);

    $p->parse_file($in_file);
    if ($html) {
      print "$out_file\n";
      my $of;
      open($of, '>', $out_file) || die "Could not open $of: $!\n";
      binmode $of, ':bytes';
      print $of $html;
      close $of;
    }
}

__END__
